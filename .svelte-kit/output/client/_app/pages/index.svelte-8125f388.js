import{S as I,i as b,s as x,e as c,t as l,k as E,c as v,a as w,h as d,d as o,m as H,b as M,g,G as s,n as y}from"../chunks/index-cc7e2ebb.js";function J(S){let t,m,r,n,u,i,f,p;return{c(){t=c("h1"),m=l("Home"),r=E(),n=c("p"),u=l("The recursive closures file is "),i=c("a"),f=l("here"),p=l(`. It's on the right in the menu, titled "Monads." I bagan the "Monads" module (this is a SvelteKit application) with this: "JavaScript monads are defined in various ways online and in print. I wouldn't say any of these definitions are right or wrong. Everyone is entitled to an opinion. Some of my thoughts on the matter will be in Home and in an addendum." So I'll begin with some information and musings on the word "monad."`),this.h()},l(e){t=v(e,"H1",{});var a=w(t);m=d(a,"Home"),a.forEach(o),r=H(e),n=v(e,"P",{});var h=w(n);u=d(h,"The recursive closures file is "),i=v(h,"A",{href:!0});var _=w(i);f=d(_,"here"),_.forEach(o),p=d(h,`. It's on the right in the menu, titled "Monads." I bagan the "Monads" module (this is a SvelteKit application) with this: "JavaScript monads are defined in various ways online and in print. I wouldn't say any of these definitions are right or wrong. Everyone is entitled to an opinion. Some of my thoughts on the matter will be in Home and in an addendum." So I'll begin with some information and musings on the word "monad."`),h.forEach(o),this.h()},h(){M(i,"href","./monads")},m(e,a){g(e,t,a),s(t,m),g(e,r,a),g(e,n,a),s(n,u),s(n,i),s(i,f),s(n,p)},p:y,i:y,o:y,d(e){e&&o(t),e&&o(r),e&&o(n)}}}class T extends I{constructor(t){super(),b(this,t,null,J,x,{})}}export{T as default};
